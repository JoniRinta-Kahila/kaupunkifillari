{"version":3,"sources":["App.module.scss","firebase/firebaseService.ts","mst/rootStoreContext.ts","components/favorites.tsx","components/search.tsx","media/fillari192.png","context/locationContextProvider.tsx","helpers/calcDistance.ts","components/nearestPlaces.tsx","components/footer.tsx","components/main.tsx","components/stationInfo.tsx","mst/index.ts","mst/setup.ts","context/bikeStationUpdateProvider.tsx","components/help.tsx","localization/languages.ts","components/cookieAlert.tsx","App.tsx","index.tsx","components/stationInfo.module.scss","components/main.module.scss","components/help.module.scss"],"names":["module","exports","firebaseInstance","defaultObj","RootStoreContext","createContext","RootStoreProvider","Provider","useStores","store","useContext","Error","Favorites","useState","favs","setFavs","getSnapshot","snap","setSnap","onSnapshot","newSnapshot","useEffect","favoriteStations","stations","filter","s","fav","favorites","find","f","name","length","style","display","flexDirection","flexWrap","width","margin","map","x","background","padding","borderRadius","color","textDecoration","fontSize","to","id","bikesAvailable","Search","observer","displayHeader","redirectTo","setRedirectTo","className","styles","container","textAlign","Autocomplete","renderOption","props","option","asd","key","disablePortal","onChange","e","a","getOptionLabel","options","value","index","self","indexOf","sx","renderInput","params","TextField","label","LocationContext","undefined","LocationContextProvider","children","location","setLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","CalcDistance","position1","position2","toRadians","rad","Math","PI","lat1","lat2","lon1","lon2","φ1","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","NearestPlaces","nPlacesToDisplay","context","useLocationContext","nearPlaces","setNearPlaces","sorted","slice","sort","pos1","pos2","alignItems","justifyContent","Footer","language","useLocalization","locales","translationsJson","translator","Translator","getLocaleString","Main","header","src","fillari","alt","marginTop","content","footer","StationInfo","station","setStation","favorite","setFavorite","addFavorite","delFavorite","stationReq","useParams","stationId","currentSation","inFavs","ActionItem","onClick","handleFavorite","size","active","len","textShadow","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseServices","getFunctionsInstance","appCheckInstance","initializeApp","initializeAppCheck","provider","ReCaptchaV3Provider","isTokenAutoRefreshEnabled","getFunctions","app","StationModel","t","model","string","number","spacesAvailable","boolean","RootStoreModel","bikeRentalStations","array","actions","console","info","push","replace","fetchStationDataAsync","flow","functionsInstance","endpointCall","functions","timeout","data","then","result","STORAGE_KEY","BikeStationUpdateProvider","updateFrequency","intervall","setInterval","clearInterval","a11yProps","TabPanel","other","role","hidden","Box","p","Typography","Help","tabValue","setTabValue","Tabs","event","newValue","centered","Tab","icon","back","Languages","FI","EN","CookieAlert","buttonText","visible","href","App","rootTree","setRootTree","storeProcessor","types","snapshotProcessor","postProcessor","copy","Stations","JSON","parse","localStorage","getItem","create","error","snapshot","setItem","stringify","setupRootStore","languageList","defaultLanguage","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.278236e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","import { FirebaseApp, initializeApp } from 'firebase/app';\nimport { initializeAppCheck, ReCaptchaV3Provider } from 'firebase/app-check';\nimport { getFunctions } from '@firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0zZzBan7E3YmvAon4l4h7ZOA9hamvlHE\",\n  authDomain: \"kaupunkifillarit-aed04.firebaseapp.com\",\n  projectId: \"kaupunkifillarit-aed04\",\n  storageBucket: \"kaupunkifillarit-aed04.appspot.com\",\n  messagingSenderId: \"746873844238\",\n  appId: \"1:746873844238:web:33ffbe49354f2cb420825f\",\n  measurementId: \"G-S8P5Z3F6S5\"\n};\n\nlet firebaseInstance: FirebaseApp;\n\nconst InitializeAppCheck = () => {\n  if (!firebaseInstance) firebaseInstance = initializeApp(firebaseConfig);\n\n  return initializeAppCheck(firebaseInstance, {\n    provider: new ReCaptchaV3Provider('6LdyvQYdAAAAAKZD7R1vWhl5PrCyfhHS4zaa6dii'),\n    isTokenAutoRefreshEnabled: true,\n  });\n};\n\nconst GetFunctionsInstance = () => {\n  const appCheckInstance = InitializeAppCheck();\n  return getFunctions(appCheckInstance.app);\n};\n\nconst FirebaseServices = {\n  getFunctionsInstance: GetFunctionsInstance,\n}\n\nexport default FirebaseServices;\n","import { createContext, useContext } from \"react\"\nimport { RootStore } from \"../mst\"\n\n// This is an dummy object instantiated only for detecting when provider is missing.\n// In this approach we are basically forbidding usage of default values in this context,\n// which seems to line up quite well with most real-life scnearios for application state management.\n// For default values for the stores, that should be done at the provider (app.tsx).\nconst defaultObj: any = {}\nconst RootStoreContext = createContext<RootStore>(defaultObj) \n\nexport const RootStoreProvider = RootStoreContext.Provider\n\nexport const useStores = () => {\n  const store = useContext(RootStoreContext)\n  if(store === defaultObj) {\n    throw new Error(\"RootStore Consumer present without provider! This likely implies mistake in code, make sure that you have provider somewhere lower in the component tree (usually at or near app.tsx).\")\n  }\n  return store\n}\n","import React, { useEffect, useState } from 'react';\nimport { RootStoreSnapshot, Station } from '../mst';\nimport { getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport { useStores } from '../mst/rootStoreContext';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst Favorites: React.FC = () => {\n  const [favs, setFavs] = useState<Station[]>([]);\n  const [snap, setSnap] = useState<RootStoreSnapshot>(getSnapshot(useStores()));\n  onSnapshot(useStores(), (newSnapshot) => setSnap(newSnapshot));\n\n  useEffect(() => {\n\n    const favoriteStations = snap.stations.filter(s => {\n      const fav = snap.favorites.find(f => f.name === s.name);\n      return s.name === fav?.name\n    });\n    setFavs(favoriteStations);\n  }, [snap]);\n\n  return snap.favorites.length > 1 ? (\n    <div style={{display:'flex', flexDirection:'row', flexWrap:'wrap', width:'300px', margin:'8px'}}>\n      {\n        favs.map(x => {\n          return (\n            <div key={x.id} style={{background: 'azure', width:'fit-content', padding:'3px 5px', borderRadius:'5px', margin:'5px'}}>\n              <Link style={{color:'black', textDecoration:'none', fontSize:'20px'}} to={`station/${x.id}`}>{`${x.name}: ${x.bikesAvailable}`}</Link>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n  : snap.favorites.length === 1 ? <Redirect to={`station/${snap.favorites[0].id}`}/> : null\n}\n\nexport default Favorites;\n","import { Autocomplete, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport styles from './search.module.scss';\nimport { observer } from 'mobx-react-lite';\nimport { useStores } from '../mst/rootStoreContext';\nimport { Redirect } from 'react-router';\n\ntype SearchProps = {\n  displayHeader?: boolean,\n}\n\nconst Search: React.FC<SearchProps> = observer(({displayHeader = true}) => {\n  const { stations } = useStores();\n  const [redirectTo, setRedirectTo] = useState<string>();\n\n  if (redirectTo) return <Redirect to={`/station/${redirectTo}`} />\n\n  const onlyUnique = (value:any, index:any, self: any) => {\n    return self.indexOf(value) === index;\n  }\n\n  return (\n    <div className={styles.container}>\n\n      {\n        displayHeader\n        ? <h1 style={{color:'azure', textAlign:'center'}}>Omat kaupunkifillarit</h1>\n        : null\n      }\n      <Autocomplete\n        renderOption={(props, option, asd) => {\n          return (\n            <li {...props} key={option.id}>\n              {option.name}\n            </li>\n          )\n        }}\n        disablePortal\n        onChange={(e, a) => setRedirectTo(a?.id)}\n        getOptionLabel={(option) => option.name}\n        id=\"combo-box-demo\"\n        // options={stations.map(x => x.name).filter(onlyUnique)}\n        options={stations.map(x => x).filter(onlyUnique)}\n        sx={{ width: 300, background:'azure' }}\n        renderInput={(params) => <TextField {...params} label=\"Valitse polkupyöräasema\" />}\n      />\n    </div>\n  )\n})\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/fillari192.9d853bc1.png\";","import React, { createContext, useContext, useEffect, useState } from 'react';\n\ninterface ILocationContext {\n  location: {\n    lat: number;\n    lon: number;\n  } | undefined;\n}\n\nconst LocationContext = createContext<ILocationContext|undefined>(undefined);\n\nexport const useLocationContext = () => {\n  const context = useContext(LocationContext);\n\n  if (context === undefined) {\n    throw new Error('Call \"useLocationContext\" only inside a LocationContextProvider')\n  }\n\n  return context;\n}\n\nconst LocationContextProvider: React.FC = ({children}) => {\n  const [location, setLocation] = useState<{lat: number, lon: number}>()\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      });\n    })\n  }, []);\n  return (\n    <LocationContext.Provider value={{location: location}}>\n      {children}\n    </LocationContext.Provider>\n  )\n}\n\nexport default LocationContextProvider;\n","export interface IPosition {\n  lat: number,\n  lon: number,\n}\n\n// https://stackoverflow.com/a/29119331\nconst CalcDistance = (position1: IPosition, position2: IPosition) => {\n  const toRadians = (rad: number) => {\n    return rad * (180 / Math.PI)\n  }\n  var lat1=position1.lat;\n  var lat2=position2.lat;\n  var lon1=position1.lon;\n  var lon2=position2.lon;\n  var R = 6371000; // metres\n  var φ1 = toRadians(lat1);\n  var φ2 = toRadians(lat2);\n  var Δφ = toRadians(lat2-lat1);\n  var Δλ = toRadians(lon2-lon1);\n\n  var a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n      Math.cos(φ1) * Math.cos(φ2) *\n      Math.sin(Δλ/2) * Math.sin(Δλ/2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n  var d = R * c;\n  return d;\n}\n\nexport default CalcDistance;\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useLocationContext } from '../context/locationContextProvider';\nimport { observer } from 'mobx-react-lite';\nimport { getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport { RootStoreSnapshot, Station } from '../mst';\nimport { useStores } from '../mst/rootStoreContext';\nimport CalcDistance from '../helpers/calcDistance';\n\ntype NearestPlacesProps = {\n  nPlacesToDisplay?: number,\n}\n\nconst NearestPlaces: React.FC<NearestPlacesProps> = observer(({nPlacesToDisplay = 3}) => {\n  const [snap, setSnap] = useState<RootStoreSnapshot>(getSnapshot(useStores()));\n  onSnapshot(useStores(), (newSnapshot) => setSnap(newSnapshot));\n\n  const { location } = useLocationContext();\n  const [nearPlaces, setNearPlaces] = useState<Station[]>([]);\n\n  // find nearest stations\n  useEffect(() => {\n    if (!location) return\n    const sorted = snap.stations.slice()\n      .sort((pos1, pos2) => CalcDistance(location, {lat: pos1.lat, lon: pos1.lon}) - CalcDistance(location, {lat: pos2.lat, lon: pos2.lon}))\n      .slice(0, nPlacesToDisplay);\n    setNearPlaces(sorted);\n  }, [location, nPlacesToDisplay, snap.stations]);\n  \n  return (\n    <div>\n      {/* <p style={{margin:0}}>Lähellä:</p> */}\n      <div style={{display:'flex', flexDirection: 'row', flexWrap: 'wrap', alignItems:'center', justifyContent:'center'}}>\n        {\n          nearPlaces.map(x => {\n            return (\n              <Link style={{background:'azure', margin:'5px 3px', padding:'3px 5px', borderRadius:'5px', textDecoration:'none', color:'black'}} key={x.id} to={`/station/${x.id}`} >{x.name}</Link>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n})\n\nexport default NearestPlaces\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Translator, useLocalization } from 'localization-react';\nimport translationsJson from '../localization/translations.json';\nimport { ITranslation } from 'localization-react/dist/translator';\n\nconst Footer: React.FC = () => {\n  const { language } = useLocalization();\n  const locales: ITranslation = translationsJson;\n  const translator = new Translator(locales, 'footer', language);\n\n  return (\n    <p>{translator.getLocaleString('install_to_mobile')} <Link to='/help'>{translator.getLocaleString('guide')}</Link></p>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Favorites from './favorites';\nimport Search from './search';\nimport fillari from '../media/fillari192.png';\nimport styles from './main.module.scss';\nimport NearestPlaces from './nearestPlaces';\nimport Footer from './footer';\n\nconst Main: React.FC = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <img src={fillari} alt='fillari'/>\n        <u style={{color:'darkgreen'}}><h1 style={{marginTop:0, fontSize:'5vh', color:'#fff'}}>Omat kaupunkifillarit</h1></u>\n      </div>\n\n\n      <div className={styles.content}>\n        <NearestPlaces />\n        <Search displayHeader={false} />\n        <Favorites />\n      </div>\n\n      <div className={styles.footer}>\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport styles from './stationInfo.module.scss';\nimport { observer } from 'mobx-react-lite';\nimport { useStores } from '../mst/rootStoreContext';\nimport { RootStoreSnapshot, Station } from '../mst';\nimport { getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport { AiOutlineStar, AiTwotoneStar } from 'react-icons/ai';\nimport Search from './search';\nimport fillari from '../media/fillari192.png';\nimport { Translator, useLocalization } from 'localization-react';\nimport translationsJson from '../localization/translations.json';\nimport { ITranslation } from 'localization-react/dist/translator';\nimport Footer from './footer';\n\nconst StationInfo: React.FC = observer(() => {\n  const { language } = useLocalization();\n  const locales: ITranslation = translationsJson;\n  const translator = new Translator(locales, 'stationInfo', language);\n\n  const [station, setStation] = useState<Station>();\n  const [favorite, setFavorite] = useState<boolean>(false);\n  \n  const { addFavorite, delFavorite } = useStores();\n\n  const [snap, setSnap] = useState<RootStoreSnapshot>(getSnapshot(useStores()));\n  onSnapshot(useStores(), (newSnapshot) => setSnap(newSnapshot));\n\n  const params = useParams<any>();\n  const stationReq: string = params.stationId;\n\n  useEffect(() => {\n    const currentSation = snap.stations.find(x => x.id === stationReq);\n    setStation(currentSation);\n\n    if (!station) return;\n    const inFavs = snap.favorites.find(x => x.name === station.name);\n    setFavorite(!!inFavs);\n    \n  }, [snap.favorites, snap.stations, station, stationReq]);\n\n  const handleFavorite = () => {\n    if (!station) return;\n    const inFavs = snap.favorites.find(x => x.name === station.name);\n    setFavorite(!inFavs);\n    inFavs ? delFavorite(station) : addFavorite(station);\n  }\n\n  const ActionItem = () => {\n    return snap.favorites.length < 2\n    ? (\n      <Search displayHeader={false} />\n    )\n    : <button><Link to='/'>{translator.getLocaleString('select_other_station')}</Link></button>\n  }\n\n  return station\n  ? (\n      <div className={styles.container}>\n\n        <div className={styles.header}>\n          <Link to='/'><img src={fillari} alt='fillari'/></Link>\n          <span style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\n            <h1 style={{color: 'azure', margin:0, fontSize:'5vh'}}>{station.name}</h1>\n            <i onClick={() => handleFavorite()}>\n              {\n                favorite\n                  ? <AiTwotoneStar size='32' color='yellow' />\n                  : <AiOutlineStar size='32'/>\n              }\n            </i>\n          </span>\n          <p style={station.active ? {color: 'greenyellow', margin:0, textAlign:'center', fontSize:'15px'} : {color:'red', textAlign:'center', fontSize:'15px'}}>{translator.getLocaleString('station')} {station.active ? translator.getLocaleString('in_use') : translator.getLocaleString('not_in_use')}</p>\n        </div>\n\n        <div className={styles.bikesAvailable}>\n          <div className={styles.len}>\n            <p>{station.bikesAvailable}</p>\n          </div>\n          <h1\n            style={\n              station.bikesAvailable < 1\n              ? {color: '#bd0000', textShadow: '2px 2px #b59a9a'}\n              : {color: 'snow', textShadow: '2px 2px #61a6e7'}\n            }\n          >\n            {/* Fillaria vapaana */}\n            {translator.getLocaleString('n_bikes_available')}\n          </h1>\n        </div>\n\n        <div className={styles.content}>\n          <ActionItem /> {/* Search bar OR btn back */}\n        </div>\n\n        <div className={styles.footer}>\n          <Footer />\n        </div>\n\n      </div>\n    )\n  : (\n      <div>\n        {/* TODO add load indicator */}\n        <p>NO_DATA</p> \n      </div>\n    )\n})\n\nexport default StationInfo;\n","import {\n  Instance,\n  SnapshotOut,\n  types as t,\n  flow\n} from 'mobx-state-tree';\nimport * as functions from 'firebase/functions';\nimport FirebaseServices from '../firebase/firebaseService';\n\nexport const StationModel = t.model('Station', {\n  id: t.string,\n  lat: t.number,\n  lon: t.number,\n  name: t.string,\n  bikesAvailable: t.number,\n  spacesAvailable: t.number,\n  active: t.boolean,\n});\n\nexport const StationsModel = t.model('Stations', {\n  bikeRentalStations: t.array(StationModel),\n});\n\nexport const RootStoreModel = t\n  .model('Root', {\n    stations: t.array(StationModel),\n    favorites: t.array(StationModel),\n  })\n  .actions(self => ({\n    addFavorite(station: Station) {\n      const exists = self.favorites.find(x => x.name === station.name);\n      if (exists) {\n        console.info(station.name, 'is allready in favorites');\n        return;\n      }\n      self.favorites.push(station);\n    },\n    delFavorite(station: Station) {\n      const exists = self.favorites.find(x => x.name === station.name);\n      if (!exists) {\n        console.info(station.name, 'is not part of favoritelist');\n        return;\n      }\n      self.favorites.replace(self.favorites.filter(x => x.name !== station.name));\n    },\n    fetchStationDataAsync: flow(function* () {\n      const functionsInstance = FirebaseServices.getFunctionsInstance();\n      const endpointCall: () => Promise<functions.HttpsCallableResult<Stations>> = functions.httpsCallable(functionsInstance, 'getStationsData', {timeout: 70000});\n      const data = endpointCall()\n        .then(data => data);\n      const result = (yield data).data;\n      self.stations.replace(result.bikeRentalStations);\n    })\n  }));\n\nexport interface Station extends Instance<typeof StationModel> { };\nexport interface StationSnapshot extends SnapshotOut<typeof StationModel> { };\n\nexport interface Stations extends Instance<typeof StationsModel> { };\nexport interface StationSnapshot extends SnapshotOut<typeof StationsModel> { };\n\nexport interface RootStore extends Instance<typeof RootStoreModel> { };\nexport interface RootStoreSnapshot extends SnapshotOut<typeof RootStoreModel> { };\n","import { onSnapshot, types } from \"mobx-state-tree\";\nimport { RootStore, RootStoreModel } from \".\";\n\nconst STORAGE_KEY = 'ROOT_STORE';\n\nexport const setupRootStore = () => {\n  let store: RootStore;\n  let data: any;\n\n  const storeProcessor = types.snapshotProcessor(RootStoreModel, {\n    postProcessor: x => {\n      const copy = {...x} as any;\n      delete copy.Stations\n      return copy;\n    },\n  });\n\n  try {\n    data = JSON.parse(localStorage.getItem(STORAGE_KEY) ?? '{}');\n    store = storeProcessor.create(data);\n  } catch (error) {\n    console.error('MST ERROR:', error)\n    store = storeProcessor.create();\n  }\n\n  onSnapshot(store, snapshot => localStorage.setItem(STORAGE_KEY, JSON.stringify(snapshot)));\n  return store;\n}","import React, { useEffect } from 'react';\nimport { useStores } from '../mst/rootStoreContext';\n\ntype BikeStationUpdateProviderProps = {\n  updateFrequency?: number, // ms\n}\n\nconst BikeStationUpdateProvider: React.FC<BikeStationUpdateProviderProps> = ({updateFrequency = 120000, children}) => {\n\n  const { fetchStationDataAsync } = useStores();\n  \n  useEffect(() => {\n    // console.log('USEEFFECT')\n    fetchStationDataAsync();\n    const intervall = setInterval(() => {\n      console.info('Updating data...');\n      fetchStationDataAsync();\n    }, updateFrequency);\n    return () => clearInterval(intervall);    \n  }, [fetchStationDataAsync, updateFrequency]);\n\n  return (\n    <div>\n      {children}\n    </div>\n  )\n}\n\nexport default BikeStationUpdateProvider;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './help.module.scss';\nimport fillari from '../media/fillari192.png';\nimport { Box } from '@mui/system';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport { GrApple, GrAndroid } from 'react-icons/gr';\n\n// https://natomasunified.org/kb/add-website-to-mobile-device-home-screen/\n\nconst a11yProps = (index:number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\ninterface ITabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: ITabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      { value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst Help: React.FC = () => {\n  const [tabValue, setTabValue] = useState<number>(0);\n\n  const handleChange = \n    (event: React.SyntheticEvent<Element, Event>, newValue: number) => {\n      setTabValue(newValue)\n    };\n\n  return (\n    <div className={styles.container}>\n\n      <div className={styles.header}>\n        <img src={fillari} alt='fillari' />\n        <h1>Omat kaupunkifillarit</h1>\n      </div>\n\n      <div className={styles.content} >\n        <Box /*sx={{borderBottom: 1, borderColor: 'divider' }}*/>\n          <Tabs value={tabValue} onChange={handleChange} centered>\n            <Tab icon={<GrAndroid size={30} />} label='Android' {...a11yProps(0)} />\n            <Tab icon={<GrApple size={30} />} label='iPad tai iPhone' {...a11yProps(1)} />\n          </Tabs>\n          <TabPanel value={tabValue} index={0}>\n            <ol>\n              <li>Avaa <b>Omat kaupunkifillarit</b> sovelus <b>Chrome</b> selaimella.</li>\n              <li>Avaa selaimen valikko (3 pistettä oikeassa ylä kulmassa).</li>\n              <li>Valitse valikosta <b>Lisää aloitusnäyttöön.</b></li>\n            </ol>\n          </TabPanel>\n          <TabPanel value={tabValue} index={1}>\n            <ol>\n              <li>Avaa <b>Omat kaupunkifillarit</b> sovelus <b>Safari</b> selaimella.</li>\n              <li>Avaa selaimen pudotusvalikko, selaimen yläosassa näkyvästä kuvakkeesta jossa laatikosta osoittaa nuoli oikealle.</li>\n              <li>Napauta <b>Lisää aloitusnäyttöön</b>.</li>\n            </ol>\n          </TabPanel>\n        </Box>\n      </div>\n\n      <Link className={styles.back} to='/'>SULJE OHJE</Link>\n    </div>\n  )\n}\n\nexport default Help;\n","const Languages = {\n  FI: 'fi',\n  EN: 'en',\n}\n\nexport default Languages;\n","import { Translator, useLocalization } from 'localization-react';\nimport { ITranslation } from 'localization-react/dist/translator';\nimport React from 'react';\nimport CookieConsent from 'react-cookie-consent';\nimport translationsJson from '../localization/translations.json';\n\nconst CookieAlert: React.FC = () => {\n  const { language } = useLocalization();\n  const locales: ITranslation = translationsJson;\n  const translator = new Translator(locales, 'cookieAlert', language);\n  return (\n    <CookieConsent\n      buttonText={translator.getLocaleString('understand')}\n      location='bottom'\n      visible=\"byCookieValue\"\n    >\n      {translator.getLocaleString('cookie_message')}\n        <a href={`https://policies.google.com/technologies/cookies?hl=${translator.getLocaleString('cookie_link_locale')}`}>\n          {translator.getLocaleString('cookie_message_after_link')}\n        </a>\n    </CookieConsent>\n  )\n}\n\nexport default CookieAlert;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from './components/main';\nimport StationInfo from './components/stationInfo';\nimport styles from './App.module.scss';\nimport { RootStore } from './mst';\nimport { setupRootStore } from './mst/setup';\nimport { RootStoreProvider } from './mst/rootStoreContext';\nimport BikeStationUpdateProvider from './context/bikeStationUpdateProvider';\nimport Search from './components/search';\nimport Help from './components/help';\nimport LocationContextProvider from './context/locationContextProvider';\nimport LocalizationContextProvider from 'localization-react';\nimport Languages from './localization/languages';\nimport CookieAlert from './components/cookieAlert';\n\nconst App: React.FC = () => {\n  const [rootTree, setRootTree] = useState<RootStore|undefined>();\n  useEffect(() => {\n    setRootTree(setupRootStore());\n  }, []);\n\n  if (!rootTree) return null; //activityindicator;\n\n  return (\n    <RootStoreProvider value={rootTree}>\n      <LocalizationContextProvider languageList={Languages} defaultLanguage='FI'>\n        <LocationContextProvider>\n          <BikeStationUpdateProvider>\n            <div className={styles.container}>\n              <Switch>\n                <Route exact path='/' component={Main} />\n                <Route exact path='/search' component ={Search} />\n                <Route exact path='/station/:stationId' component={StationInfo} />\n                <Route exact path='/help' component={Help} />\n              </Switch>\n              <CookieAlert />\n            </div>\n          </BikeStationUpdateProvider>\n        </LocationContextProvider>\n      </LocalizationContextProvider>\n    </RootStoreProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stationInfo_container__3H6VT\",\"header\":\"stationInfo_header__151sH\",\"content\":\"stationInfo_content__1yvd1\",\"footer\":\"stationInfo_footer__7Nw_g\",\"bikesAvailable\":\"stationInfo_bikesAvailable__9agL0\",\"len\":\"stationInfo_len__CjFpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__1Wj1w\",\"header\":\"main_header__2Ty8i\",\"content\":\"main_content__IA-9v\",\"footer\":\"main_footer__1_F-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"help_container__lBfRu\",\"header\":\"help_header__qTCiX\",\"content\":\"help_content__-xnzE\",\"back\":\"help_back__2YpZr\"};"],"sourceRoot":""}